REMOTE_USER
	The authenticated user.
	
REDIRECT_REMOTE_USER
	The authenticated user if the request is internally redirected.
	
PHP_AUTH_DIGEST
	When doing Digest HTTP authentication this variable is set to the Authorization header sent by the client 
	(which you should then use to make the appropriate validation).
	
PHP_AUTH_USER
	When doing HTTP authentication this variable is set to the username provided by the user.
	
PHP_AUTH_PW
	When doing HTTP authentication this variable is set to the password provided by the user.
	
AUTH_TYPE
	When doing HTTP authentication this variable is set to the authentication type.
	I noted that $_SERVER['AUTH_TYPE'] is only available for a page that was authenticated through a traditional external mechanism (like Apache).
	
=========================(SERVERS.XML: ENVIRONMENT SPECIFIC)
SERVERS >> DELEGATE ME!
	database
	caching
		apc
		array
		database
		file
		memcache(d) 
		redis
	queues
	mail
		'driver' => env('MAIL_DRIVER', 'smtp'),
		'host' => env('MAIL_HOST', 'smtp.mailgun.org'),
    		'port' => env('MAIL_PORT', 587),
		'from' => ['address' => null, 'name' => null],
    		'encryption' => env('MAIL_ENCRYPTION', 'tls'),
    		'username' => env('MAIL_USERNAME'),
    		'password' => env('MAIL_PASSWORD'),
    		'sendmail' => '/usr/sbin/sendmail -bs',
FILESYSTEMS
	'default' => 'local'	// default filesystem disk used by framework (Supported: "local", "ftp", "s3", "rackspace")
	'cloud' => 's3'		// default cloud filesystem disk
	'disks' => [		// filesystem_disk
		'local' => [
		    'driver' => 'local',
		    'root' => storage_path('app'),
		],
		's3' => [
		    'driver' => 's3',
		    'key' => 'your-key',
		    'secret' => 'your-secret',
		    'region' => 'your-region',
		    'bucket' => 'your-bucket',
		],
	],
SESSIONS
	'driver' => env('SESSION_DRIVER', 'file'),	// Supported: "file", "cookie", "database", "apc", "memcached", "redis", "array"
		
// TODO: ? create DownloadWrapper<->FileWrapper, JsonWrapper, XmlWrapper, HtmlWrapper
// TODO: ? setView/getView + setFile/getFile @ Response 
// TODO: make Request class support NGINX
// TODO: add optional format @ routes.route
	// Vulnerability: if one allows to set extension in request, if JSON => it would show everything we send to views (show business knowledge)
// TODO: refactor Session class (to include options @ documentation



    matching means git push will push all your local branches to the ones with the same name on the remote. This makes it easy to accidentally push a branch you didn't intend to.

    simple means git push will push only the current branch to the one that git pull would pull from, and also checks that their names match. This is a more intuitive behavior, which is why the default is getting changed to this.

	